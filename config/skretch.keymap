#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        OS1 {
            bindings = <&trans>;
            key-positions = <15 12>;
        };

        OS2 {
            bindings = <&trans>;
            key-positions = <23 20>;
        };

        Ctrl1 {
            bindings = <&trans>;
            key-positions = <15 14>;
        };

        Ctrl2 {
            bindings = <&trans>;
            key-positions = <20 21>;
        };

        Alt1 {
            bindings = <&trans>;
            key-positions = <15 13>;
        };

        Alt2 {
            bindings = <&trans>;
            key-positions = <20 22>;
        };

        OS_Ctrl1 {
            bindings = <&trans>;
            key-positions = <15 14 12>;
        };

        OS_Ctrl2 {
            bindings = <&trans>;
            key-positions = <20 23 21>;
        };

        OS_Alt1 {
            bindings = <&trans>;
            key-positions = <15 13 12>;
        };

        OS_Alt2 {
            bindings = <&trans>;
            key-positions = <20 22 23>;
        };

        OS_Alt_Ctrl1 {
            bindings = <&trans>;
            key-positions = <15 14 13 12>;
        };

        OS_Alt_Ctrl2 {
            bindings = <&trans>;
            key-positions = <20 21 22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alpha {
            bindings = <
&kp Q  &kp W  &kp E         &kp R      &kp T           &none  &none        &kp Y            &kp U        &kp I    &kp O      &kp P
&kp A  &kp S  &kp D         &kp F      &kp G           &none  &none        &kp H            &kp J        &kp K    &kp L    &kp SQT
&kp Z  &kp Z  &kp C         &kp V      &kp B           &none  &none        &kp N            &kp M    &kp COMMA  &kp DOT  &kp SLASH
       &none  &none  &lt 5 ESCAPE  &lt 4 TAB  &kp LEFT_SHIFT  &none  &lt 1 SPACE  &lt 2 BACKSPACE  &lt 3 ENTER    &none      &none
            >;
        };

        Symbol {
            bindings = <
&kp LEFT_BRACE    &kp AMPERSAND  &kp ASTERISK        &kp LEFT_BRACE        &kp RIGHT_BRACE      &none  &none  &none           &none      &none         &none         &none
     &kp COLON       &kp DOLLAR   &kp PERCENT             &kp CARET               &kp PLUS      &none  &none  &none  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN
     &kp TILDE  &kp EXCLAMATION   &kp AT_SIGN              &kp HASH               &kp PIPE      &none  &none  &none           &none      &none         &none         &none
                          &none         &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &none  &none           &none      &none         &none         &none
            >;
        };

        Number {
            bindings = <
&kp GRAVE  &kp N1  &kp N2   &kp N3     &kp N4  &kp N5  &kp N6  &kp N7      &kp N8    &kp N9        &kp N0         &none
&kp SLASH  &kp N4  &kp N5   &kp N6   &kp PLUS   &none   &none   &none       &none     &none         &none         &none
 &kp STAR  &kp N7  &kp N8   &kp N9  &kp MINUS   &none   &none   &none       &none     &none         &none         &none
            &none  &kp N0  &kp DOT  &kp ENTER   &none   &none  &trans  &kp C_NEXT  &kp C_PP  &kp C_VOL_UP  &kp C_VOL_DN
            >;
        };

        Function {
            bindings = <
  &none  &kp F1   &kp F2   &kp F3   &kp F4  &none  &none  &bt BT_CLR  &bt BT_NXT      &none  &kp PSCRN    &none
  &none  &kp F5   &kp F6   &kp F7   &kp F8  &none  &none       &none       &none      &none      &none    &none
&kp DEL  &kp F9  &kp F10  &kp F11  &kp F12  &none  &none       &none       &none      &none      &none  &kp DEL
         &trans   &trans    &none   &trans  &none  &none       &none    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
